buildscript {
    ext {
        room_version = '2.5.0-alpha03'
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.14'
        classpath 'com.android.tools.build:gradle:7.2.2'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
        classpath 'com.google.firebase:perf-plugin:1.4.2'
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.2.2' apply false
    id 'com.android.library' version '7.2.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
    id "org.sonarqube" version "3.5.0.2730"
    id "jacoco"
}
sonarqube {
    properties {
        property "sonar.projectKey", "UGroup-LLC_UWidget_AYXLjpz3EVHjo3h5y-_7"
        property "sonar.login", "admin"
        property "sonar.password", "kiko123"
    }
}

task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/data/models/*']

    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.projectDir, includes: ['**/**/*.exec', '**/**/*.ec'])
}


task clean(type: Delete) {
    delete rootProject.buildDir
}